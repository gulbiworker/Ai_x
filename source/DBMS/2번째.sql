-- join : 2개 이상의 테이블을 연결하여 데이터를 검색하는 방법
SELECT * FROM EMP WHERE ENAME = 'SCOTT';
SELECT * FROM DEPT;
-- CROSS JOIN
SELECT * 
      FROM EMP, DEPT
      WHERE ENAME='SCOTT';
-- 1. EQUI JOIN(공통필드 값이 일치되는 조건만 JOIN)
SELECT EMPNO NO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, D.DEPTNO, DNAME, LOC
     FROM EMP E, DEPT D                                       
     WHERE ENAME='SCOTT' AND E.DEPTNO = D.DEPTNO              -- 테이블 별칭만 사용 가능
     ORDER BY NO;
-- 모든 사원의 사원, 이름, JOB, 상사사번, 부서번호, 부서명, 근무지
  SELECT EMPNO, ENAME, JOB, MGR, D.DEPTNO, DNAME, LOC
        FROM EMP E, DEPT D
        WHERE E.DEPTNO=D.DEPTNO;
    -- EX2. 급여(SAL)가 2000이상인 직원의 이름, JOB, 급여, 부서명, 근무지
    SELECT ENAME, JOB, SAL, DNAME, LOC
        FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND SAL>=2000;
    -- EX3. 근무지(LOC)가 'CHICAGO'인 직원의 이름, JOB, 급여, 부서번호 출력
    SELECT ENAME, JOB, SAL, E.DEPTNO FROM EMP E, DEPT D
        WHERE E.DEPTNO=D.DEPTNO AND LOC='CHICAGO';
    -- EX4. 82년도에 입사한 10,20번 부서직원의 이름, 급여, 근무지(급여순) 출력
    
    -- 직업이 판매원, 매니저인 사원의 이름 급여 상여 연봉 부서명 출력(연봉순)
    SELECT ENAME, SAL, COMM, (SAL + NVL(COMM, 0)*12) 연봉, DNAME, LOC
       FROM EMP E, DEPT D
       WHERE E.DEPTNO=D.DEPTNO AND JOB IN('SALESMAN', 'MANAGER')
       ORDER BY 연봉 DESC;
    -- COMM 이 NULL 이고 SAL 이 2000대인 사원의 이름, 급여, 입사일, 부서면호, 부서명
     -- 부서명 순, 급여순 정렬
     
     SELECT ENAME, SAL, HIREDATE, E.DEPTNO, DNAME
         FROM EMP E, DEPT D
         WHERE E.DEPTNO=D.DEPTNO AND COMM IS NULL AND SAL BETWEEN 2000 AND 2999;
         
         
-- 	뉴욕에서 근무하는 사원의 이름과 급여를 출력하시오
SELECT ENAME, SAL
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND LOC='NEW YORK';
--	ACCOUNTING 부서 소속 사원의 이름과 입사일을 출력하시오
SELECT ENAME, HIREDATE
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND DEPT='ACCOUNTING';
--	직급이 MANAGER인 사원의 이름, 부서명을 출력하시오
SELECT ENAME
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND JOB='MANAGER';
--	Comm이 null이 아닌 사원의 이름, 급여, 부서코드, 근무지를 출력하시오.
SELECT ENAME, SAL, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND COMM is not null;
    
-- NON-EQUI JOIN
SELECT * FROM EMP WHERE ENAME='SCOTT';
SELECT * FROM SALGRADE;
SELECT * FROM EMP, SALGRADE
WHERE ENAME='SCOTT' AND SAL BETWEEN LOSAL AND HISAL;
SELECT EMPNO, ENAME, JOB, MGR, SAL, GRADE||'등급' GRADE
FROM EMP, SALGRADE
WHERE SAL BETWEEN LOSAL AND HISAL;
--	Comm이 null이 아닌 사원의 이름, 급여, 등급, 부서번호, 부서이름, 근무지를 출력하시오.
SELECT * FROM EMP 
WHERE COMM IS NOT NULL;
--	이름, 급여, 입사일, 급여등급
SELECT ENAME, SAL, HIREDATE, GRADE 
FROM EMP, SALGRADE 
WHERE COMM IS NOT NULL;
--	이름, 급여, 급여등급, 연봉, 부서명을 부서명순으로 정렬하여 출력. 부서가 같으면 연봉순. 연봉=(sal+comm)*12 comm이 null이면 0
SELECT ENAME, (SAL+NVL(COMM, 0)*12) 연봉, HIREDATE, GRADE 
FROM EMP, SALGRADE 
WHERE COMM IS NOT NULL;
--	이름, 업무, 급여, 등급, 부서코드, 부서명 출력. 급여가 1000~3000사이. 정렬조건 : 부서별, 부서같으면 업무별, 업무같으면 급여 큰순
SELECT * 
FROM EMP E,DEPT D, SALGRADE 
WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL AND SAL BETWEEN 1000 AND 3000 ORDER BY SAL;
--	이름, 급여, 등급, 입사일, 근무지. 81년에 입사한 사람. 등급 큰순
SELECT * 
FROM EMP, SALGRADE 
WHERE HIREDATE LIKE '%81%' ORDER BY JOB, GRADE;
-- SELF JOIN
SELECT * FROM EMP WHERE ENAME='SMITH';
SELECT EMPNO, ENAME FROM EMP WHERE EMPNO=7902;
SELECT WORKER.EMPNO, WORKER.ENAME, WORKER.MGR, MANAGER.EMPNO, MANAGER.ENAME
FROM EMP WORKER, EMP MANAGER
WHERE WORKER.ENAME='SMITH' AND WORKER.MGR=MANAGER.EMPNO;
--1. 모든 사원에 대한 이름, 부서번호, 부서명을 출력하는 SELECT 문장을 작성하여라.
SELECT * FROM EMP;
--2. NEW YORK에서 근무하고 있는 사원에 대하여 이름, 업무, 급여, 부서명을 출력
SELECT ENAME, SAL
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND LOC='NEW YORK';
--3. 보너스를 받는 사원에 대하여 이름,부서명,위치를 출력
SELECT ENAME, LOC
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO AND COMM IS NOT NULL;
--4. 이름 중 L자가 있는 사원에 대하여 이름,업무,부서명,위치를 출력
SELECT * FROM EMP
WHERE ENAME LIKE '%L%L%';
--5. 사번, 사원명, 부서코드, 부서명을 검색하라(단, 사원명기준으로 오름차순 정렬)
SELECT * FROM EMP ORDER BY ENAME;
--6. 사번, 사원명, 급여, 부서명을 검색하라. 
    --단 급여가 2000이상인 사원에 대하여 급여를 기준으로 내림차순으로 정렬하시오
    SELECT * FROM EMP, SALGRADE 
    WHERE SAL>=2000 ORDER BY GRADE; 
--7. 사번, 사원명, 업무, 급여, 부서명을 검색하시오. 단 업무가 MANAGER이며 급여가 2500이상인
    -- 사원에 대하여 사번을 기준으로 오름차순으로 정렬하시오.
SELECT * FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO AND JOB='MANAGER' AND SAL>=2500 ORDER BY ENAME;
--8. 사번, 사원명, 업무, 급여, 등급을 검색하시오(단, 급여기준 내림차순으로 정렬)
SELECT * FROM EMP, SALGRADE
ORDER BY GRADE;

-- SELF JOIN
SELECT W.EMPNO, W.ENAME, W.MGR, M.ENAME MANAGER
FROM EMP W, EMP M
WHERE W.MGR=M.EMPNO;

SELECT W.ENAME ||'의 상사는'|| M.ENAME || '이다' MESSAGE
FROM EMP W, EMP M
WHERE W.MGR=M.EMPNO;

-- 연습문제
-- 1. SCOTT 과 동일한 부서에서 근무하는 사원의 이름
SELECT E1.ENAME, E1.DEPTNO, E2.ENAME, E2.DEPTNO
FROM EMP E1, EMP E2
WHERE E1.DEPTNO = (SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT')
AND ENAME^='SCOTT';
-- 2. 메니저가 KING인 사원들의 이름과 직급
SELECT W.ENAME, W.JOB, W.MGR, M.ENAME
FROM EMP W, EMP M
WHERE W.MGR = M.EMPNO AND M.ENAME='KING';
SELECT ENAME, JOB FROM EMP
WHERE MGR = (SELECT EMPNO FROM EMP WHERE ENAME='KING');

-- OUTER JOIN
-- 배제된 행을 결과에 포함시킬 경우 + 기호를 정보가 부족한 칼럼 이름 뒤에 덧붙임
SELECT W.EMPNO, W.ENAME, W.MGR, M.EMPNO, M.ENAME
FROM EMP W, EMP M
WHERE W.MGR = M.EMPNO(+);
SELECT W.ENAME ||'의 상사는' || M.ENAVE ||'다' MESSAGE 
FROM EMP W, EMP M
WHERE W.MGR = M.EMPNO(+);

SELECT W.ENAME ||'의 상사는' || NVL(M.ENAME, '없') || '다' MESSAGE
FROM EMP W, EMP M
WHERE W.MGR = M.EMPNO(+);

SELECT * FROM DEPT;
SELECT * FROM EMP;
SELECT ENAME, E.DEPTNO, DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO;

-- ★ <총 연습문제>
-- Part2
  --1. 이름, 직속상사명
SELECT W.ENAME, M.ENAME MANAGER
    FROM EMP W, EMP M 
    WHERE W.MGR=M.EMPNO;
    
  --2. 이름, 급여, 업무, 직속상사명
SELECT W.ENAME, W.SAL, W.JOB, M.ENAME "MANAGER"
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO;
    
  --3. 이름, 급여, 업무, 직속상사명 . (상사가 없는 직원까지 전체 직원 다 출력.
    --상사가 없을 시 '없음'으로 출력)
SELECT W.ENAME, W.SAL, W.JOB, NVL(M.ENAME,'없음') MANAGER
    FROM EMP W, EMP M
    WHERE W.MGR=M.EMPNO(+);
    
  --4. 이름, 급여, 부서명, 직속상사명
SELECT W.ENAME, W.SAL, DNAME, M.ENAME MANAGER
  FROM EMP W, EMP M, DEPT D
  WHERE W.DEPTNO=D.DEPTNO AND W.MGR=M.EMPNO;
  
  --5. 이름, 급여, 부서코드, 부서명, 근무지, 직속상사명, (상사가 없는 직원까지 전체 직원 다 출력)
SELECT W.ENAME, W.SAL, W.DEPTNO, DNAME, LOC, M.ENAME MANAGER
  FROM EMP W, EMP M, DEPT D
  WHERE W.DEPTNO=D.DEPTNO AND W.MGR=M.EMPNO(+);
  
  --6. 이름, 급여, 등급, 부서명, 직속상사명. 급여가 2000이상인 사람
SELECT W.ENAME, W.SAL, GRADE, DNAME, M.ENAME MANAGER
    FROM EMP W, SALGRADE, DEPT D, EMP M
    WHERE W.SAL BETWEEN LOSAL AND HISAL AND W.DEPTNO=D.DEPTNO AND W.MGR=M.EMPNO
        AND W.SAL >= 2000;      -- 직속상사가 없는 직원까지 출력하려면 W.MGR=M.EMPNO(+)
        
  --7. 이름, 급여, 등급, 부서명, 직속상사명, (직속상사가 없는 직원까지 전체직원 부서명 순 정렬)
SELECT W.ENAME, W.SAL, GRADE, DNAME, M.ENAME MANAGER
  FROM EMP W, EMP M, DEPT D, SALGRADE
  WHERE W.MGR=M.EMPNO(+) AND W.DEPTNO=D.DEPTNO AND W.SAL BETWEEN LOSAL AND HISAL
  ORDER BY DNAME;
  
  --8. 이름, 급여, 등급, 부서명, 연봉, 직속상사명. 연봉=(급여+comm)*12 단 comm이 null이면 0
SELECT W.ENAME, W.SAL, GRADE, DNAME, (W.SAL+NVL(W.COMM, 0))*12 ANNUALSAL, M.ENAME MANAGER
    FROM EMP W, EMP M, SALGRADE, DEPT D
    WHERE W.MGR=M.EMPNO AND W.SAL BETWEEN LOSAL AND HISAL AND W.DEPTNO=D.DEPTNO;
    
  --9. 8번을 부서명 순 부서가 같으면 급여가 큰 순 정렬
SELECT W.ENAME, W.SAL, GRADE, DNAME, (W.SAL+NVL(W.COMM, 0))*12 ANNUALSAL, M.ENAME MANAGER
    FROM EMP W, EMP M, SALGRADE, DEPT D
    WHERE W.MGR=M.EMPNO AND W.SAL BETWEEN LOSAL AND HISAL AND W.DEPTNO=D.DEPTNO
    ORDER BY DNAME, W.SAL DESC; -- ORDER BY DNAME, SAL DESC도 가능
    

  --10. 사원테이블에서 사원명, 사원의 상사를 검색하시오(상사가 없는 직원까지 전체)
SELECT W.ENAME, M.ENAME MANAGER
  FROM EMP W, EMP M
  WHERE W.MGR=M.EMPNO(+);
  
  --11. 사원명, 상사명, 상사의 상사명을 검색하시오
SELECT W.ENAME WORKER, M.ENAME MANAGER, MM.ENAME TOPMANAGER
  FROM EMP W, EMP M, EMP MM
  WHERE W.MGR=M.EMPNO AND M.MGR=MM.EMPNO;
  
  --12. 위의 결과에서 상위 상사가 없는 모든 직원의 이름도 출력되도록 수정하시오
SELECT W.ENAME WORKER, M.ENAME MANAGER, MM.ENAME TOPMANAGER
  FROM EMP W, EMP M, EMP MM
  WHERE W.MGR=M.EMPNO(+) AND M.MGR=MM.EMPNO(+);




         
         